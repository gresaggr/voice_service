version: '3.8'

services:
  app:
    build: .
    restart: unless-stopped
    volumes:
      - ./app:/app/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - rabbitmq
    command: python -m app.main

  worker:
    build: .
    restart: unless-stopped
    volumes:
      - ./app:/app/app
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - rabbitmq
    command: taskiq worker app.tasks.broker:broker

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data: