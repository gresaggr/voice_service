"""
–î–∏–∞–ª–æ–≥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
"""

from typing import Any

from aiogram import F
from aiogram.types import Message, CallbackQuery, LabeledPrice, PreCheckoutQuery
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Button, Back, Cancel, Group, Select
from aiogram_dialog.widgets.input import MessageInput

from ...states.payment import PaymentStates
from ...utils import (
    BALANCE_TOP_UP_AMOUNTS,
    PAYMENT_METHODS,
    format_currency,
    convert_rubles_to_stars,
    validate_balance_amount,
    generate_payment_id,
    MESSAGES
)


async def get_top_up_amounts(**kwargs):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"""
    amounts = []
    for amount in BALANCE_TOP_UP_AMOUNTS:
        amounts.append({
            "amount": amount,
            "formatted": format_currency(amount),
            "stars": convert_rubles_to_stars(amount)
        })
    
    return {"amounts": amounts}


async def get_payment_methods(**kwargs):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã"""
    dialog_manager: DialogManager = kwargs["dialog_manager"]
    selected_amount = dialog_manager.dialog_data.get("selected_amount", 0)
    
    methods = [
        {
            "id": "yoomoney",
            "name": "üí≥ –ÆMoney",
            "description": f"–ü–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ {format_currency(selected_amount)}"
        },
        {
            "id": "telegram_stars",
            "name": "‚≠ê Telegram Stars",
            "description": f"–ü–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ {convert_rubles_to_stars(selected_amount)} –∑–≤–µ–∑–¥"
        }
    ]
    
    return {
        "methods": methods,
        "amount": format_currency(selected_amount)
    }


async def amount_selected(
    callback: CallbackQuery,
    select,
    dialog_manager: DialogManager,
    item_id: str
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã"""
    try:
        amount = float(item_id)
        if validate_balance_amount(amount):
            dialog_manager.dialog_data["selected_amount"] = amount
            await dialog_manager.next()
        else:
            await callback.message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞")
    except ValueError:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—É–º–º—ã")


async def payment_method_selected(
    callback: CallbackQuery,
    select,
    dialog_manager: DialogManager,
    item_id: str
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã"""
    dialog_manager.dialog_data["payment_method"] = item_id
    
    if item_id == "yoomoney":
        await dialog_manager.switch_to(PaymentStates.yoomoney_payment)
    elif item_id == "telegram_stars":
        await dialog_manager.switch_to(PaymentStates.stars_payment)


async def process_yoomoney_payment(
    callback: CallbackQuery,
    button,
    dialog_manager: DialogManager,
):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ –ÆMoney"""
    from ...services.payment_service import PaymentService
    
    payment_service = PaymentService()
    amount = dialog_manager.dialog_data["selected_amount"]
    user_id = callback.from_user.id
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –ÆMoney
        payment_url = await payment_service.create_yoomoney_payment(
            user_telegram_id=user_id,
            amount=amount
        )
        
        if payment_url:
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ
            from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=payment_url)],
                [InlineKeyboardButton(text="‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="payment_check")]
            ])
            
            await callback.message.edit_text(
                f"üí≥ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ –ÆMoney\n\n"
                f"üí∞ –°—É–º–º–∞: {format_currency(amount)}\n\n"
                f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ:",
                reply_markup=keyboard
            )
            
            await dialog_manager.done()
        else:
            await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞")
    
    except Exception as e:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞")
        print(f"YooMoney payment error: {e}")


async def process_stars_payment(
    callback: CallbackQuery,
    button,
    dialog_manager: DialogManager,
):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram Stars"""
    from ...services.payment_service import PaymentService
    
    payment_service = PaymentService()
    amount_rub = dialog_manager.dialog_data["selected_amount"]
    amount_stars = convert_rubles_to_stars(amount_rub)
    user_id = callback.from_user.id
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–æ–π—Å –¥–ª—è Telegram Stars
        payment_id = generate_payment_id()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ
        await payment_service.create_stars_payment(
            user_telegram_id=user_id,
            amount_rub=amount_rub,
            amount_stars=amount_stars,
            payment_id=payment_id
        )
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–æ–π—Å
        from aiogram.types import LabeledPrice
        
        prices = [LabeledPrice(label="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞", amount=amount_stars)]
        
        await callback.bot.send_invoice(
            chat_id=callback.message.chat.id,
            title="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞",
            description=f"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {format_currency(amount_rub)}",
            payload=payment_id,
            provider_token="",  # –î–ª—è Telegram Stars —Ç–æ–∫–µ–Ω –Ω–µ –Ω—É–∂–µ–Ω
            currency="XTR",  # –í–∞–ª—é—Ç–∞ –¥–ª—è Telegram Stars
            prices=prices,
            start_parameter="balance_topup"
        )
        
        await dialog_manager.done()
    
    except Exception as e:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞")
        print(f"Telegram Stars payment error: {e}")


async def custom_amount_handler(
    message: Message,
    message_input,
    dialog_manager: DialogManager,
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã"""
    try:
        amount = float(message.text)
        
        if amount <= 0:
            await message.answer("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
            return
        
        if amount < 10:
            await message.answer("‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: 10 —Ä—É–±–ª–µ–π")
            return
        
        if amount > 50000:
            await message.answer("‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: 50,000 —Ä—É–±–ª–µ–π")
            return
        
        dialog_manager.dialog_data["selected_amount"] = amount
        await dialog_manager.switch_to(PaymentStates.select_method)
    
    except ValueError:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö")


# –û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
amount_window = Window(
    Const("üí∞ –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:"),
    Group(
        Select(
            Format("{item[formatted]}"),
            id="amount_select",
            item_id_getter=lambda item: str(item["amount"]),
            items="amounts",
            on_click=amount_selected,
        ),
        width=2,
    ),
    Button(
        Const("‚úèÔ∏è –î—Ä—É–≥–∞—è —Å—É–º–º–∞"),
        id="custom_amount",
        on_click=lambda c, b, m: m.switch_to(PaymentStates.custom_amount)
    ),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
    getter=get_top_up_amounts,
    state=PaymentStates.select_amount,
)

# –û–∫–Ω–æ –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
custom_amount_window = Window(
    Const("üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ä—É–±–ª—è—Ö:\n\n"
          "–ú–∏–Ω–∏–º—É–º: 10 —Ä—É–±.\n"
          "–ú–∞–∫—Å–∏–º—É–º: 50,000 —Ä—É–±."),
    MessageInput(custom_amount_handler),
    Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
    state=PaymentStates.custom_amount,
)

# –û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã
method_window = Window(
    Format("üí≥ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {amount}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:"),
    Group(
        Select(
            Format("{item[name]}\n{item[description]}"),
            id="method_select",
            item_id_getter=lambda item: item["id"],
            items="methods",
            on_click=payment_method_selected,
        ),
        width=1,
    ),
    Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
    getter=get_payment_methods,
    state=PaymentStates.select_method,
)

# –û–∫–Ω–æ –æ–ø–ª–∞—Ç—ã –ÆMoney
yoomoney_window = Window(
    Format("üí≥ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ÆMoney\n\n"
           "üí∞ –°—É–º–º–∞: {amount}\n\n"
           "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ:"),
    Button(
        Const("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å"),
        id="pay_yoomoney",
        on_click=process_yoomoney_payment,
    ),
    Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
    getter=get_payment_methods,
    state=PaymentStates.yoomoney_payment,
)

# –û–∫–Ω–æ –æ–ø–ª–∞—Ç—ã Telegram Stars
stars_window = Window(
    Format("‚≠ê –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Stars\n\n"
           "üí∞ –°—É–º–º–∞: {amount}\n"
           "‚≠ê –ö –æ–ø–ª–∞—Ç–µ: {methods[1][stars]} –∑–≤–µ–∑–¥\n\n"
           "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:"),
    Button(
        Const("‚≠ê –°–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç"),
        id="pay_stars",
        on_click=process_stars_payment,
    ),
    Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
    getter=get_payment_methods,
    state=PaymentStates.stars_payment,
)

# –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥
payment_dialog = Dialog(
    amount_window,
    custom_amount_window,
    method_window,
    yoomoney_window,
    stars_window,
)