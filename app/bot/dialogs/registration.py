"""
–î–∏–∞–ª–æ–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

from typing import Any

from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import Button, Back, Cancel

from ...states.registration import RegistrationStates
from ...utils import validate_username, sanitize_input, MESSAGES


async def username_handler(
    message: Message,
    message_input,
    dialog_manager: DialogManager,
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    username = sanitize_input(message.text, max_length=50)
    
    if not validate_username(username):
        await message.answer(
            "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n"
            "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 1 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–∫–ª—é—á–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –±—É–∫–≤—É."
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞
    dialog_manager.dialog_data["username"] = username
    await dialog_manager.next()


async def phone_handler(
    message: Message,
    message_input,
    dialog_manager: DialogManager,
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    from ...utils import validate_phone
    
    phone = sanitize_input(message.text)
    
    if not validate_phone(phone):
        await message.answer(
            "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n"
            "–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞: +7 900 123-45-67"
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞
    dialog_manager.dialog_data["phone"] = phone
    await dialog_manager.next()


async def confirm_registration(
    callback: CallbackQuery,
    button,
    dialog_manager: DialogManager,
):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    from ...services.user_service import UserService
    
    user_service = UserService()
    username = dialog_manager.dialog_data["username"]
    phone = dialog_manager.dialog_data["phone"]
    telegram_id = callback.from_user.id
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await user_service.create_user(
            telegram_id=telegram_id,
            username=username,
            phone=phone
        )
        
        if user:
            await callback.message.answer(MESSAGES["registration_complete"])
            await dialog_manager.done()
        else:
            await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    except Exception as e:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        print(f"Registration error: {e}")


async def get_registration_data(**kwargs):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –¥–∏–∞–ª–æ–≥–µ"""
    dialog_manager: DialogManager = kwargs["dialog_manager"]
    
    return {
        "username": dialog_manager.dialog_data.get("username", ""),
        "phone": dialog_manager.dialog_data.get("phone", ""),
    }


# –û–∫–Ω–æ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
username_window = Window(
    Const("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
          "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n"
          "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"),
    MessageInput(username_handler),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
    state=RegistrationStates.enter_username,
)

# –û–∫–Ω–æ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
phone_window = Window(
    Const("üì± –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n\n"
          "–ü—Ä–∏–º–µ—Ä: +7 900 123-45-67"),
    MessageInput(phone_handler),
    Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
    state=RegistrationStates.enter_phone,
)

# –û–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
confirmation_window = Window(
    Format("‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n\n"
           "üë§ –ò–º—è: {username}\n"
           "üì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n\n"
           "–í—Å–µ –≤–µ—Ä–Ω–æ?"),
    Button(
        Const("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
        id="confirm",
        on_click=confirm_registration,
    ),
    Back(Const("‚¨ÖÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å")),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
    getter=get_registration_data,
    state=RegistrationStates.confirmation,
)

# –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥
registration_dialog = Dialog(
    username_window,
    phone_window, 
    confirmation_window,
)